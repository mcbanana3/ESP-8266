// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>
#include <WiFiClientSecure.h>
#include <ESP8266Webhook.h>
#include <Servo.h>
#include <ESP8266WiFi.h>

const char DEVICE_LOGIN_NAME[]  = "fafbee46-a189-4ea9-9590-ad51557d66a6";

const char SSID[]               = SECRET_SSID;    // Network SSID (name)
const char PASS[]               = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)
const char DEVICE_KEY[]  = SECRET_DEVICE_KEY;    // Secret device password

void onMessageChange();
void onWaterLevel2Change();
void onLight1Change();

String message;
int waterLevel_2;
bool light_1;

void initProperties(){

  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
  ArduinoCloud.addProperty(message, READWRITE, ON_CHANGE, onMessageChange);
  ArduinoCloud.addProperty(waterLevel_2, READWRITE, ON_CHANGE, onWaterLevel2Change);
  ArduinoCloud.addProperty(light_1, READWRITE, ON_CHANGE, onLight1Change);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);


#define KEY "g1khlPZmlBu197lQp2Y3typ_-nCTrFl3Tjoc2qgBw18"        // Webhooks Key
#define EVENT "Key_press"      // Webhooks Event Name

#define servopin D7
#define LED D6

Servo Servol;

Webhook webhook(KEY, EVENT);    // Create an object..

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(115200);
  pinMode(LED, OUTPUT);
  Servol.attach(servopin);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();
 
  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  Serial.print("WATER LEVEL:");
  Serial.println(waterLevel_2);
  if(waterLevel_2 >= 30){
    Servol.write(90);
    digitalWrite(D6, HIGH);
    int response = webhook.trigger();
    if(response == 200)
      Serial.println("OK");
    else
      Serial.println("Failed");
  }
  
  else{
    digitalWrite(D6, LOW);
    Servol.write(0);
  }
}

void onWaterLevel2Change()  {
  // Add your code here to act upon WaterLevel2 change
}

void onLight1Change()  {
  // Add your code here to act upon Light1 change
}
/*
  Since Message is READ_WRITE variable, onMessageChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMessageChange()  {
  // Add your code here to act upon Message change
}
